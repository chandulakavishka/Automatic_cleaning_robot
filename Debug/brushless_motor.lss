
brushless_motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000194  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001e8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000218  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000254  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008ae  00000000  00000000  0000027c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005bf  00000000  00000000  00000b2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000339  00000000  00000000  000010e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001424  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000345  00000000  00000000  00001458  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000039f  00000000  00000000  0000179d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001b3c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 c1 00 	call	0x182	; 0x182 <main>
  64:	0c 94 c8 00 	jmp	0x190	; 0x190 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <brushless_run>:
    }
}
void brushless_run(unsigned char power,unsigned char brushless_speed)
{
	
	if(power==1){
  6c:	81 30       	cpi	r24, 0x01	; 1
  6e:	09 f0       	breq	.+2      	; 0x72 <brushless_run+0x6>
  70:	7c c0       	rjmp	.+248    	; 0x16a <brushless_run+0xfe>
		if(brushless_speed == 'h'){
  72:	68 36       	cpi	r22, 0x68	; 104
  74:	89 f5       	brne	.+98     	; 0xd8 <brushless_run+0x6c>
			PORTA= PORTA | (1<<0) | (1<<1) & (~(1<<2));
  76:	8b b3       	in	r24, 0x1b	; 27
  78:	83 60       	ori	r24, 0x03	; 3
  7a:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7c:	8f e1       	ldi	r24, 0x1F	; 31
  7e:	9e e4       	ldi	r25, 0x4E	; 78
  80:	01 97       	sbiw	r24, 0x01	; 1
  82:	f1 f7       	brne	.-4      	; 0x80 <brushless_run+0x14>
  84:	00 c0       	rjmp	.+0      	; 0x86 <brushless_run+0x1a>
  86:	00 00       	nop
			_delay_ms(10);
			PORTA= PORTA | (1<<0) & (~(1<<1)) & (~(1<<2));
  88:	8b b3       	in	r24, 0x1b	; 27
  8a:	81 60       	ori	r24, 0x01	; 1
  8c:	8b bb       	out	0x1b, r24	; 27
  8e:	8f ec       	ldi	r24, 0xCF	; 207
  90:	97 e0       	ldi	r25, 0x07	; 7
  92:	01 97       	sbiw	r24, 0x01	; 1
  94:	f1 f7       	brne	.-4      	; 0x92 <brushless_run+0x26>
  96:	00 c0       	rjmp	.+0      	; 0x98 <brushless_run+0x2c>
  98:	00 00       	nop
			_delay_ms(1);
			PORTA= PORTA | (1<<0) & (~(1<<1)) | (1<<2);
  9a:	8b b3       	in	r24, 0x1b	; 27
  9c:	85 60       	ori	r24, 0x05	; 5
  9e:	8b bb       	out	0x1b, r24	; 27
  a0:	87 ec       	ldi	r24, 0xC7	; 199
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	01 97       	sbiw	r24, 0x01	; 1
  a6:	f1 f7       	brne	.-4      	; 0xa4 <brushless_run+0x38>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <brushless_run+0x3e>
  aa:	00 00       	nop
			_delay_ms(0.1);
			PORTA= PORTA & (~(1<<0)) & (~(1<<1)) | (1<<2);
  ac:	8b b3       	in	r24, 0x1b	; 27
  ae:	88 7f       	andi	r24, 0xF8	; 248
  b0:	84 60       	ori	r24, 0x04	; 4
  b2:	8b bb       	out	0x1b, r24	; 27
  b4:	9a e1       	ldi	r25, 0x1A	; 26
  b6:	9a 95       	dec	r25
  b8:	f1 f7       	brne	.-4      	; 0xb6 <brushless_run+0x4a>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <brushless_run+0x50>
			_delay_ms(0.01);
			PORTA= PORTA & (~(1<<0)) | (1<<1) | (1<<2);
  bc:	8b b3       	in	r24, 0x1b	; 27
  be:	88 7f       	andi	r24, 0xF8	; 248
  c0:	86 60       	ori	r24, 0x06	; 6
  c2:	8b bb       	out	0x1b, r24	; 27
  c4:	22 e0       	ldi	r18, 0x02	; 2
  c6:	2a 95       	dec	r18
  c8:	f1 f7       	brne	.-4      	; 0xc6 <brushless_run+0x5a>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <brushless_run+0x60>
			_delay_ms(0.001);
			PORTA= PORTA & (~(1<<0)) | (1<<1) & (~(1<<2));
  cc:	8b b3       	in	r24, 0x1b	; 27
  ce:	8c 7f       	andi	r24, 0xFC	; 252
  d0:	82 60       	ori	r24, 0x02	; 2
  d2:	8b bb       	out	0x1b, r24	; 27
  d4:	00 00       	nop
  d6:	08 95       	ret
			_delay_ms(0.0001);
		
			
			}else if(brushless_speed == 'l'){
  d8:	6c 36       	cpi	r22, 0x6C	; 108
  da:	09 f0       	breq	.+2      	; 0xde <brushless_run+0x72>
  dc:	51 c0       	rjmp	.+162    	; 0x180 <brushless_run+0x114>
			
			PORTA= PORTA | (1<<0) | (1<<1) & (~(1<<2));
  de:	8b b3       	in	r24, 0x1b	; 27
  e0:	83 60       	ori	r24, 0x03	; 3
  e2:	8b bb       	out	0x1b, r24	; 27
  e4:	8f ec       	ldi	r24, 0xCF	; 207
  e6:	97 e0       	ldi	r25, 0x07	; 7
  e8:	01 97       	sbiw	r24, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <brushless_run+0x7c>
  ec:	00 c0       	rjmp	.+0      	; 0xee <brushless_run+0x82>
  ee:	00 00       	nop
			_delay_ms(1);
			PORTA= PORTA | (1<<0) & (~(1<<1)) & (~(1<<2));
  f0:	8b b3       	in	r24, 0x1b	; 27
  f2:	81 60       	ori	r24, 0x01	; 1
  f4:	8b bb       	out	0x1b, r24	; 27
  f6:	8f e1       	ldi	r24, 0x1F	; 31
  f8:	9e e4       	ldi	r25, 0x4E	; 78
  fa:	01 97       	sbiw	r24, 0x01	; 1
  fc:	f1 f7       	brne	.-4      	; 0xfa <brushless_run+0x8e>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <brushless_run+0x94>
 100:	00 00       	nop
			_delay_ms(10);
			PORTA= PORTA | (1<<0) & (~(1<<1)) | (1<<2);
 102:	8b b3       	in	r24, 0x1b	; 27
 104:	85 60       	ori	r24, 0x05	; 5
 106:	8b bb       	out	0x1b, r24	; 27
 108:	9f ef       	ldi	r25, 0xFF	; 255
 10a:	20 e7       	ldi	r18, 0x70	; 112
 10c:	32 e0       	ldi	r19, 0x02	; 2
 10e:	91 50       	subi	r25, 0x01	; 1
 110:	20 40       	sbci	r18, 0x00	; 0
 112:	30 40       	sbci	r19, 0x00	; 0
 114:	e1 f7       	brne	.-8      	; 0x10e <brushless_run+0xa2>
 116:	00 c0       	rjmp	.+0      	; 0x118 <brushless_run+0xac>
 118:	00 00       	nop
			_delay_ms(100);
			PORTA= PORTA & (~(1<<0)) & (~(1<<1)) | (1<<2);
 11a:	8b b3       	in	r24, 0x1b	; 27
 11c:	88 7f       	andi	r24, 0xF8	; 248
 11e:	84 60       	ori	r24, 0x04	; 4
 120:	8b bb       	out	0x1b, r24	; 27
 122:	8f ef       	ldi	r24, 0xFF	; 255
 124:	99 e6       	ldi	r25, 0x69	; 105
 126:	28 e1       	ldi	r18, 0x18	; 24
 128:	81 50       	subi	r24, 0x01	; 1
 12a:	90 40       	sbci	r25, 0x00	; 0
 12c:	20 40       	sbci	r18, 0x00	; 0
 12e:	e1 f7       	brne	.-8      	; 0x128 <brushless_run+0xbc>
 130:	00 c0       	rjmp	.+0      	; 0x132 <brushless_run+0xc6>
 132:	00 00       	nop
			_delay_ms(1000);
			PORTA= PORTA & (~(1<<0)) | (1<<1) | (1<<2);
 134:	8b b3       	in	r24, 0x1b	; 27
 136:	88 7f       	andi	r24, 0xF8	; 248
 138:	86 60       	ori	r24, 0x06	; 6
 13a:	8b bb       	out	0x1b, r24	; 27
 13c:	3f ef       	ldi	r19, 0xFF	; 255
 13e:	83 e2       	ldi	r24, 0x23	; 35
 140:	94 ef       	ldi	r25, 0xF4	; 244
 142:	31 50       	subi	r19, 0x01	; 1
 144:	80 40       	sbci	r24, 0x00	; 0
 146:	90 40       	sbci	r25, 0x00	; 0
 148:	e1 f7       	brne	.-8      	; 0x142 <brushless_run+0xd6>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <brushless_run+0xe0>
 14c:	00 00       	nop
			_delay_ms(10000);
			PORTA= PORTA & (~(1<<0)) | (1<<1) & (~(1<<2));
 14e:	8b b3       	in	r24, 0x1b	; 27
 150:	8c 7f       	andi	r24, 0xFC	; 252
 152:	82 60       	ori	r24, 0x02	; 2
 154:	8b bb       	out	0x1b, r24	; 27
 156:	2a ea       	ldi	r18, 0xAA	; 170
 158:	3a ea       	ldi	r19, 0xAA	; 170
 15a:	8a ea       	ldi	r24, 0xAA	; 170
 15c:	9a e2       	ldi	r25, 0x2A	; 42
 15e:	21 50       	subi	r18, 0x01	; 1
 160:	30 40       	sbci	r19, 0x00	; 0
 162:	80 40       	sbci	r24, 0x00	; 0
 164:	90 40       	sbci	r25, 0x00	; 0
 166:	d9 f7       	brne	.-10     	; 0x15e <brushless_run+0xf2>
 168:	08 95       	ret
			_delay_ms(10000000);
			
		}
	}
	else if(power==0){
 16a:	81 11       	cpse	r24, r1
 16c:	09 c0       	rjmp	.+18     	; 0x180 <brushless_run+0x114>
		PORTA= PORTA & (~(1<<0));
 16e:	8b b3       	in	r24, 0x1b	; 27
 170:	8e 7f       	andi	r24, 0xFE	; 254
 172:	8b bb       	out	0x1b, r24	; 27
		PORTA= PORTA & (~(1<<1));
 174:	8b b3       	in	r24, 0x1b	; 27
 176:	8d 7f       	andi	r24, 0xFD	; 253
 178:	8b bb       	out	0x1b, r24	; 27
		PORTA= PORTA & (~(1<<2));
 17a:	8b b3       	in	r24, 0x1b	; 27
 17c:	8b 7f       	andi	r24, 0xFB	; 251
 17e:	8b bb       	out	0x1b, r24	; 27
 180:	08 95       	ret

00000182 <main>:
#include <util/delay.h>

void brushless_run(unsigned char power,unsigned char brushless_speed);
int main(void)
{
   DDRA=0X07; 
 182:	87 e0       	ldi	r24, 0x07	; 7
 184:	8a bb       	out	0x1a, r24	; 26
   
    while (1) 
    {
		brushless_run(1,'l');   //power on(0) ,off(0) and speed high(h) ,low(l)
 186:	6c e6       	ldi	r22, 0x6C	; 108
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	0e 94 36 00 	call	0x6c	; 0x6c <brushless_run>
 18e:	fb cf       	rjmp	.-10     	; 0x186 <main+0x4>

00000190 <_exit>:
 190:	f8 94       	cli

00000192 <__stop_program>:
 192:	ff cf       	rjmp	.-2      	; 0x192 <__stop_program>
